//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Windows.Properties {
    using System;
    
    
    /// <summary>A strongly-typed resource class, for looking up localized strings, etc.</summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen with the /str option, or rebuild your VS
    // project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>Returns the cached ResourceManager instance used by this class.</summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Windows.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly
        ///   typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>Looks up a localized string similar to Failed to register application for restart due to bad parameters..</summary>
        public static string ApplicationRecoverFailedToRegisterForRestartBadParameters {
            get {
                return ResourceManager.GetString("ApplicationRecoverFailedToRegisterForRestartBadParameters", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Application was not registered for recovery due to bad parameters..</summary>
        public static string ApplicationRecoveryBadParameters {
            get {
                return ResourceManager.GetString("ApplicationRecoveryBadParameters", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Application failed to register for recovery..</summary>
        public static string ApplicationRecoveryFailedToRegister {
            get {
                return ResourceManager.GetString("ApplicationRecoveryFailedToRegister", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Application failed to registered for restart..</summary>
        public static string ApplicationRecoveryFailedToRegisterForRestart {
            get {
                return ResourceManager.GetString("ApplicationRecoveryFailedToRegisterForRestart", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Unregister for recovery failed..</summary>
        public static string ApplicationRecoveryFailedToUnregister {
            get {
                return ResourceManager.GetString("ApplicationRecoveryFailedToUnregister", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Unregister for restart failed..</summary>
        public static string ApplicationRecoveryFailedToUnregisterForRestart {
            get {
                return ResourceManager.GetString("ApplicationRecoveryFailedToUnregisterForRestart", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to This method must be called from the registered callback method..</summary>
        public static string ApplicationRecoveryMustBeCalledFromCallback {
            get {
                return ResourceManager.GetString("ApplicationRecoveryMustBeCalledFromCallback", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Cancelable cannot be changed while dialog is showing..</summary>
        public static string CancelableCannotBeChanged {
            get {
                return ResourceManager.GetString("CancelableCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog caption cannot be changed while dialog is showing..</summary>
        public static string CaptionCannotBeChanged {
            get {
                return ResourceManager.GetString("CaptionCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to CheckBox text cannot be changed while dialog is showing..</summary>
        public static string CheckBoxCannotBeChanged {
            get {
                return ResourceManager.GetString("CheckBoxCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Collapsed control text cannot be changed while dialog is showing..</summary>
        public static string CollapsedTextCannotBeChanged {
            get {
                return ResourceManager.GetString("CollapsedTextCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog cannot have more than one control with the same name..</summary>
        public static string DialogCollectionCannotHaveDuplicateNames {
            get {
                return ResourceManager.GetString("DialogCollectionCannotHaveDuplicateNames", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog control must be removed from current collections first..</summary>
        public static string DialogCollectionControlAlreadyHosted {
            get {
                return ResourceManager.GetString("DialogCollectionControlAlreadyHosted", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Control name cannot be null or zero length..</summary>
        public static string DialogCollectionControlNameNull {
            get {
                return ResourceManager.GetString("DialogCollectionControlNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifying controls collection while dialog is showing is not
        ///   supported..
        /// </summary>
        public static string DialogCollectionModifyShowingDialog {
            get {
                return ResourceManager.GetString("DialogCollectionModifyShowingDialog", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog control name cannot be empty or null..</summary>
        public static string DialogControlNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("DialogControlNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog controls cannot be renamed..</summary>
        public static string DialogControlsCannotBeRenamed {
            get {
                return ResourceManager.GetString("DialogControlsCannotBeRenamed", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Application.</summary>
        public static string DialogDefaultCaption {
            get {
                return ResourceManager.GetString("DialogDefaultCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanded information mode cannot be changed while dialog is
        ///   showing..
        /// </summary>
        public static string ExpandedDetailsCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandedDetailsCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Expanded control label cannot be changed while dialog is showing..</summary>
        public static string ExpandedLabelCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandedLabelCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanding state of the dialog cannot be changed while dialog is
        ///   showing..
        /// </summary>
        public static string ExpandingStateCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandingStateCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to The path entered is not valid..</summary>
        public static string FilePathInvalid {
            get {
                return ResourceManager.GetString("FilePathInvalid", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Hyperlinks cannot be enabled/disabled while dialog is showing..</summary>
        public static string HyperlinksCannotBetSet {
            get {
                return ResourceManager.GetString("HyperlinksCannotBetSet", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to A value is required for this field.</summary>
        public static string InputRequired {
            get {
                return ResourceManager.GetString("InputRequired", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Maximum value provided must be greater than the minimum value.</summary>
        public static string MaximumValueGreater {
            get {
                return ResourceManager.GetString("MaximumValueGreater", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Minimum value provided must less than the maximum value.</summary>
        public static string MinimumLessValue {
            get {
                return ResourceManager.GetString("MinimumLessValue", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Minimum value provided must be a positive number.</summary>
        public static string MinimumValuePositive {
            get {
                return ResourceManager.GetString("MinimumValuePositive", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to An error has occurred in dialog configuration..</summary>
        public static string NativeTaskDialogConfigurationError {
            get {
                return ResourceManager.GetString("NativeTaskDialogConfigurationError", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Invalid arguments to Win32 call..</summary>
        public static string NativeTaskDialogInternalErrorArgs {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorArgs", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog contents too complex..</summary>
        public static string NativeTaskDialogInternalErrorComplex {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorComplex", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to An unexpected internal error occurred in the Win32 call: {0:x}.</summary>
        public static string NativeTaskDialogInternalErrorUnexpected {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TaskDialog feature needs to load version 6 of comctl32.dll but a
        ///   different version is current loaded in memory..
        /// </summary>
        public static string NativeTaskDialogVersionError {
            get {
                return ResourceManager.GetString("NativeTaskDialogVersionError", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog owner cannot be changed while dialog is showing..</summary>
        public static string OwnerCannotBeChanged {
            get {
                return ResourceManager.GetString("OwnerCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Progress bar cannot be changed while dialog is showing..</summary>
        public static string ProgressBarCannotBeChanged {
            get {
                return ResourceManager.GetString("ProgressBarCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Progress bar cannot be hosted in multiple dialogs..</summary>
        public static string ProgressBarCannotBeHostedInMultipleDialogs {
            get {
                return ResourceManager.GetString("ProgressBarCannotBeHostedInMultipleDialogs", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Progress bar cannot be hosted in multiple dialogs..</summary>
        public static string ProgressBarError {
            get {
                return ResourceManager.GetString("ProgressBarError", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to delegate: {0}, state: {1}, ping: {2}.</summary>
        public static string RecoverySettingsFormatString {
            get {
                return ResourceManager.GetString("RecoverySettingsFormatString", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to command: {0} restrictions: {1}.</summary>
        public static string RestartSettingsFormatString {
            get {
                return ResourceManager.GetString("RestartSettingsFormatString", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to This property cannot be set or modified while dialog is showing..</summary>
        public static string SetError {
            get {
                return ResourceManager.GetString("SetError", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to StandardButtons cannot be changed while dialog is showing..</summary>
        public static string StandardButtonsCannotBeChanged {
            get {
                return ResourceManager.GetString("StandardButtonsCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Startup location cannot be changed while dialog is showing..</summary>
        public static string StartupLocationCannotBeChanged {
            get {
                return ResourceManager.GetString("StartupLocationCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Bad button ID in closing event..</summary>
        public static string TaskDialogBadButtonId {
            get {
                return ResourceManager.GetString("TaskDialogBadButtonId", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Button text must be non-empty..</summary>
        public static string TaskDialogButtonTextEmpty {
            get {
                return ResourceManager.GetString("TaskDialogButtonTextEmpty", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Check box text must be provided to enable the dialog check box..</summary>
        public static string TaskDialogCheckBoxTextRequiredToEnableCheckBox {
            get {
                return ResourceManager.GetString("TaskDialogCheckBoxTextRequiredToEnableCheckBox", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Attempting to close a non-showing dialog..</summary>
        public static string TaskDialogCloseNonShowing {
            get {
                return ResourceManager.GetString("TaskDialogCloseNonShowing", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Application.</summary>
        public static string TaskDialogDefaultCaption {
            get {
                return ResourceManager.GetString("TaskDialogDefaultCaption", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Cannot have more than one default button of a given type..</summary>
        public static string TaskDialogOnlyOneDefaultControl {
            get {
                return ResourceManager.GetString("TaskDialogOnlyOneDefaultControl", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Maximum value provided must be greater than the minimum value..</summary>
        public static string TaskDialogProgressBarMaxValueGreaterThanMin {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMaxValueGreaterThanMin", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Minimum value provided must be a positive number..</summary>
        public static string TaskDialogProgressBarMinValueGreaterThanZero {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Minimum value provided must less than the maximum value..</summary>
        public static string TaskDialogProgressBarMinValueLessThanMax {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueLessThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value provided must be greater than equal to the minimum value and
        ///   less than the maximum value..
        /// </summary>
        public static string TaskDialogProgressBarValueInRange {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarValueInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog cannot display both non-standard buttons and standard
        ///   buttons..
        /// </summary>
        public static string TaskDialogSupportedButtonsAndButtons {
            get {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndButtons", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Dialog cannot display both non-standard buttons and command links..</summary>
        public static string TaskDialogSupportedButtonsAndLinks {
            get {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndLinks", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Unknown dialog control type..</summary>
        public static string TaskDialogUnkownControl {
            get {
                return ResourceManager.GetString("TaskDialogUnkownControl", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to The url entered is not valid..</summary>
        public static string UrilInvalid {
            get {
                return ResourceManager.GetString("UrilInvalid", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Value provided must be greater than or equal to minimum value.</summary>
        public static string ValueGreater {
            get {
                return ResourceManager.GetString("ValueGreater", resourceCulture);
            }
        }
        
        /// <summary>Looks up a localized string similar to Value provided must be less than or equal to the maximum value.</summary>
        public static string ValueLess {
            get {
                return ResourceManager.GetString("ValueLess", resourceCulture);
            }
        }
    }
}
