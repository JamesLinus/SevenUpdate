<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converters="clr-namespace:SevenUpdate.Converters"
    xmlns:Converters="clr-namespace:SevenUpdate.Converters;assembly=SevenUpdate.Base">
    <converters:FileSizeConverter x:Key="fileSizeConverter" />
    <converters:LocaleStringToStringConverter x:Key="localeStringToString" />
    <converters:Is64BitToStringConverter x:Key="is64BitToString" />
    <converters:UpdateStatusToBoolConverter x:Key="updateStatusToBool" />
    <converters:ImportanceToString x:Key="importanceToString" />
    <Converters:StringToVisibilityConverter x:Key="stringToVisibility" />
    <Converters:IntToVisibilityConverter x:Key="intToVisibility" />
    <converters:DateConverter x:Key="dateConverter" />
    
    
    <DataTemplate x:Key="HeaderTemplateSortDesc">
        <DockPanel>
            <TextBlock HorizontalAlignment="Left" Text="{Binding}" />
            <Path StrokeThickness="1" Fill="Gray" Data="M 5,5 L 10,10 L 15,5 L 5,5" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderTemplateSortAsc">
        <DockPanel>
            <TextBlock HorizontalAlignment="Left" Text="{Binding}" />
            <Path StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10" />
        </DockPanel>
    </DataTemplate>

    <Style x:Key="HeaderTemplate" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="5,0" />
    </Style>
    <Style x:Key="alternatingListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Style.Triggers>
            <!-- setting up triggers for alternate background colors -->
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#F3F7FB" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="underlineTextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Image}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
    </Style>
</ResourceDictionary>