<!-- Copyright (c) Robert Baker, Seven Software -->
<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Converters="clr-namespace:SevenUpdate.Converters"
                    xmlns:Converters1="clr-namespace:SevenSoftware.Windows.Converters;assembly=SevenSoftware.Windows">
  <Converters:FileSizeConverter x:Key="fileSizeConverter" />
  <Converters:LocaleStringToStringConverter x:Key="localeStringToString" />
  <Converters:PlatformToStringConverter x:Key="platformToString" />
  <Converters:ImportanceToStringConverter x:Key="importanceToString" />
  <Converters:UpdateStatusToStringConverter x:Key="statusToString" />
  <Converters:UpdateStatusToBooleanConverter x:Key="statusToBool" />
  <Converters:DateConverter x:Key="dateConverter" />
  <Converters1:StringToVisibilityConverter x:Key="stringToVisibility" />
  <Converters1:StringToBooleanConverter x:Key="stringToBool" />
  <Converters1:IntToVisibilityConverter x:Key="intToVisibility" />
  <Converters1:IntToBooleanConverter x:Key="intToBool" />
  <Converters1:IndexToVisibilityConverter x:Key="indexToVisibility" />

  <Converters1:InverseBooleanConverter x:Key="inverseBool" />

  <Style TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
  </Style>

  <Style TargetType="{x:Type ListViewItem}" x:Key="alternatingListViewItemStyle">
    <Style.Triggers>

      <!-- setting up triggers for alternate background colors -->
      <Trigger Property="ItemsControl.AlternationIndex" Value="0">
        <Setter Property="Background" Value="#F3F7FB" />
      </Trigger>
      <Trigger Property="ItemsControl.AlternationIndex" Value="1">
        <Setter Property="Background" Value="White" />
      </Trigger>
      <!-- setting up triggers for hidden updates-->
      <DataTrigger Binding="{Binding Hidden}" Value="True">
        <Setter Property="Foreground" Value="Gray" />
      </DataTrigger>

      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="#FFdcebfc" />
                <GradientStop Offset="1" Color="#FFc1dbfc" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type Image}">
    <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
  </Style>

  <Style TargetType="TextBlock" x:Key="glassText">
    <Setter Property="Foreground" Value="Black" />
    <Style.Triggers>
      <Trigger Property="Foreground" Value="Black">
        <Setter Property="Effect">
          <Setter.Value>
            <DropShadowEffect Color="White" BlurRadius="10" RenderingBias="Performance" ShadowDepth="0" Direction="0" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="glassLink" TargetType="TextBlock" BasedOn="{StaticResource glassText}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="Foreground" Value="#FF0066CC" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Foreground" Value="#FF3399FF" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="Hyperlink">
    <Setter Property="Foreground" Value="#FF0066CC" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Foreground" Value="#FF3399FF" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="underlineTextBlock" TargetType="TextBlock">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="True" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="textBlockLink" TargetType="TextBlock" BasedOn="{StaticResource underlineTextBlock}">
    <Setter Property="Foreground" Value="#FF0066CC" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="#FF3399FF" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>